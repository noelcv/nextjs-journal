{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/noel/Desktop/cw_post/nextjs-journal/pages/notes/[id].jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { useRouter } from 'next/router';\n\nvar Note = function Note() {\n  _s();\n\n  var router = useRouter(); //this id will be matching the [id] from the file name\n  //params will be an array /notes/1/2/3\n\n  var id = router.query.id; //for programmatic routing use the router.push method\n\n  return jsx(\"div\", {\n    sx: {\n      variant: 'containers.page'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, jsx(\"button\", {\n    onClick: function onClick() {\n      return router.push('/');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Go Home\"), jsx(\"button\", {\n    onClick: function onClick() {\n      return router.push('/notes');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Go to Notes Index\"), jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Note: \", id, \" \"));\n};\n\n_s(Note, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["jsx","useRouter","Note","router","id","query","variant","push"],"sources":["/Users/noel/Desktop/cw_post/nextjs-journal/pages/notes/[id].jsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { useRouter } from 'next/router'\n\nconst Note = () => {\n  const router = useRouter();\n  //this id will be matching the [id] from the file name\n  //params will be an array /notes/1/2/3\n  const { id } = router.query;\n  \n  //for programmatic routing use the router.push method\n  \n  return (\n    <div sx={{variant: 'containers.page'}}>\n      <button onClick={() => router.push('/')}>Go Home</button>\n      <button onClick={() => router.push('/notes')}>Go to Notes Index</button>  \n      <h1>Note: {id} </h1>\n    </div>\n  )\n}\n\nexport default Note;\n\n"],"mappings":";;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;EAAA;;EACjB,IAAMC,MAAM,GAAGF,SAAS,EAAxB,CADiB,CAEjB;EACA;;EACA,IAAQG,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR,CAJiB,CAMjB;;EAEA,OACE;IAAK,EAAE,EAAE;MAACE,OAAO,EAAE;IAAV,CAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAQ,OAAO,EAAE;MAAA,OAAMH,MAAM,CAACI,IAAP,CAAY,GAAZ,CAAN;IAAA,CAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADF,EAEE;IAAQ,OAAO,EAAE;MAAA,OAAMJ,MAAM,CAACI,IAAP,CAAY,QAAZ,CAAN;IAAA,CAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBAFF,EAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAWH,EAAX,MAHF,CADF;AAOD,CAfD;;GAAMF,I;UACWD,S;;;KADXC,I;AAiBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}