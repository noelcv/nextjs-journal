{"ast":null,"code":"var _jsxFileName = \"/Users/noel/Desktop/cw_post/nextjs-journal/pages/notes/[id].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { useRouter } from 'next/router';\n\nconst Note = ({\n  note\n}) => {\n  const router = useRouter(); //this id will be matching the [id] from the file name\n  //params will be an array /notes/1/2/3\n  // const { id } = router.query;\n  //for programmatic routing use the router.push method\n\n  return jsx(\"div\", {\n    sx: {\n      variant: 'containers.page'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, jsx(\"button\", {\n    onClick: () => router.push('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Go Home\"), jsx(\"button\", {\n    onClick: () => router.push('/notes'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Go to Notes Index\"), jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Note: \", note.title, \" \"));\n};\n\nexport default Note;\nexport async function getServerSideProps({\n  params,\n  req,\n  res\n}) {\n  const response = await fetch(`http://localhost:3000/api/note/${params.id}`);\n\n  if (!response.ok) {\n    res.writeHead(302, {\n      Location: '/notes'\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  }\n\n  const {\n    data\n  } = await response.json();\n  return {\n    props: {\n      note: data\n    }\n  };\n}","map":{"version":3,"names":["jsx","useRouter","Note","note","router","variant","push","title","getServerSideProps","params","req","res","response","fetch","id","ok","writeHead","Location","end","props","data","json"],"sources":["/Users/noel/Desktop/cw_post/nextjs-journal/pages/notes/[id].jsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { useRouter } from 'next/router'\n\nconst Note = ({note}) => {\n  const router = useRouter();\n  //this id will be matching the [id] from the file name\n  //params will be an array /notes/1/2/3\n  // const { id } = router.query;\n  \n  //for programmatic routing use the router.push method\n  \n  return (\n    <div sx={{variant: 'containers.page'}}>\n      <button onClick={() => router.push('/')}>Go Home</button>\n      <button onClick={() => router.push('/notes')}>Go to Notes Index</button>  \n      <h1>Note: {note.title} </h1>\n    </div>\n  )\n}\n\nexport default Note;\n\n\nexport async function getServerSideProps({params, req, res}) {\n  const response = await fetch(`http://localhost:3000/api/note/${params.id}`)\n  \n  if(!response.ok) {\n    res.writeHead(302, {\n      Location: '/notes'\n    })\n    res.end()\n    \n    return {\n      props: {}\n    }\n  }\n  \n  const { data } = await response.json();\n  \n  return {\n    props: {\n      note: data,\n    }\n  }\n}"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;EAACC;AAAD,CAAD,KAAY;EACvB,MAAMC,MAAM,GAAGH,SAAS,EAAxB,CADuB,CAEvB;EACA;EACA;EAEA;;EAEA,OACE;IAAK,EAAE,EAAE;MAACI,OAAO,EAAE;IAAV,CAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAQ,OAAO,EAAE,MAAMD,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADF,EAEE;IAAQ,OAAO,EAAE,MAAMF,MAAM,CAACE,IAAP,CAAY,QAAZ,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBAFF,EAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAWH,IAAI,CAACI,KAAhB,MAHF,CADF;AAOD,CAfD;;AAiBA,eAAeL,IAAf;AAGA,OAAO,eAAeM,kBAAf,CAAkC;EAACC,MAAD;EAASC,GAAT;EAAcC;AAAd,CAAlC,EAAsD;EAC3D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCJ,MAAM,CAACK,EAAG,EAA7C,CAA5B;;EAEA,IAAG,CAACF,QAAQ,CAACG,EAAb,EAAiB;IACfJ,GAAG,CAACK,SAAJ,CAAc,GAAd,EAAmB;MACjBC,QAAQ,EAAE;IADO,CAAnB;IAGAN,GAAG,CAACO,GAAJ;IAEA,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD;;EAED,MAAM;IAAEC;EAAF,IAAW,MAAMR,QAAQ,CAACS,IAAT,EAAvB;EAEA,OAAO;IACLF,KAAK,EAAE;MACLhB,IAAI,EAAEiB;IADD;EADF,CAAP;AAKD"},"metadata":{},"sourceType":"module"}