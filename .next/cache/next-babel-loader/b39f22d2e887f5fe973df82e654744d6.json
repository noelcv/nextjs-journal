{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from 'next-connect'; //replace with db\n\nimport notes from '../../../src/data/data'; //middleware example to protect api routes\n\nconst checkAuth = (req, res, next) => {\n  if (req.headers.auth) {\n    return next();\n  }\n\n  res.status(401);\n};\n\nconst handler = nc().use(checkAuth()) //we can also pass middleware\n.post((req, res) => {\n  const note = _objectSpread(_objectSpread({}, req.body), {}, {\n    id: Date.now()\n  });\n\n  notes.push(note);\n  res.json({\n    data: note\n  });\n}).get((req, res) => {\n  res.json({\n    data: notes\n  });\n});\nexport default handler;","map":{"version":3,"names":["nc","notes","checkAuth","req","res","next","headers","auth","status","handler","use","post","note","body","id","Date","now","push","json","data","get"],"sources":["/Users/noel/Desktop/cw_post/nextjs-journal/pages/api/note/index.js"],"sourcesContent":["import nc from 'next-connect'\n//replace with db\nimport notes from '../../../src/data/data'\n\n//middleware example to protect api routes\nconst checkAuth = (req, res, next) => {\n  if(req.headers.auth) {\n    return next()\n  }\n  res.status(401);\n}\n\nconst handler = nc()\n    .use(checkAuth()) //we can also pass middleware\n    .post((req, res) => {\n      const note = {...req.body, \n      id: Date.now()\n      }\n      notes.push(note)\n      res.json({data: note})\n    })\n    .get((req, res) => {\n      res.json({data: notes})\n    })\n    \n\nexport default handler;"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf,C,CACA;;AACA,OAAOC,KAAP,MAAkB,wBAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;EACpC,IAAGF,GAAG,CAACG,OAAJ,CAAYC,IAAf,EAAqB;IACnB,OAAOF,IAAI,EAAX;EACD;;EACDD,GAAG,CAACI,MAAJ,CAAW,GAAX;AACD,CALD;;AAOA,MAAMC,OAAO,GAAGT,EAAE,GACbU,GADW,CACPR,SAAS,EADF,EACM;AADN,CAEXS,IAFW,CAEN,CAACR,GAAD,EAAMC,GAAN,KAAc;EAClB,MAAMQ,IAAI,mCAAOT,GAAG,CAACU,IAAX;IACVC,EAAE,EAAEC,IAAI,CAACC,GAAL;EADM,EAAV;;EAGAf,KAAK,CAACgB,IAAN,CAAWL,IAAX;EACAR,GAAG,CAACc,IAAJ,CAAS;IAACC,IAAI,EAAEP;EAAP,CAAT;AACD,CARW,EASXQ,GATW,CASP,CAACjB,GAAD,EAAMC,GAAN,KAAc;EACjBA,GAAG,CAACc,IAAJ,CAAS;IAACC,IAAI,EAAElB;EAAP,CAAT;AACD,CAXW,CAAhB;AAcA,eAAeQ,OAAf"},"metadata":{},"sourceType":"module"}